apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
 
sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0-SNAPSHOT'

configurations {
    integrationTestCompile {
        extendsFrom testCompile
    }
    functionalTestRuntime {
        extendsFrom integrationTestCompile, testRuntime
    }
}
buildscript {
    repositories {
     mavenCentral()
     maven { url 'http://dl.bintray.com/vermeulen-mp/gradle-plugins' }
    }
    dependencies {
        classpath 'com.wiredforcode:gradle-heroku-plugin:1.0.0'
    }
}
repositories {
    mavenCentral()
}
ext {
    dropwizardVersion = '0.8.2'
}

dependencies {
    compile "io.dropwizard.modules:dropwizard-java8:0.8.0-2"
    compile "io.dropwizard.modules:dropwizard-java8-auth:0.8.0-2"
    compile "io.dropwizard:dropwizard-core:$dropwizardVersion"
    compile "io.dropwizard:dropwizard-client:0.8.2"
//    compile "io.dropwizard:dropwizard-hibernate:0.8.2"
//    compile "io.dropwizard:dropwizard-servlets:0.8.2"
    compile "io.dropwizard:dropwizard-jersey:$dropwizardVersion"
    compile "io.dropwizard:dropwizard-jetty:$dropwizardVersion"
    compile "io.dropwizard:docs:$dropwizardVersion"
    compile "org.mongodb.morphia:morphia:1.0.1"
    testCompile "io.dropwizard:dropwizard-testing:$dropwizardVersion"
    testCompile "junit:junit:4.+"
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "org.hamcrest:hamcrest-core:1.2"
    testCompile "org.hamcrest:hamcrest-library:1.2"
    testCompile "de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.48.2"
}

mainClassName = "main.MongodbExampleApplication"


run {
	args 'server', 'dev-config.yml'
}

sourceSets{
    integrationTest {
        java.srcDir file('src/integration-test/java')
        compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.integrationTestCompile
        runtimeClasspath = output + compileClasspath + configurations.integrationTestRuntime
    }
}

apply plugin: 'heroku'

heroku {
    apiKey = "f9be5f51-725a-49da-a538-915ccf12d4b"
    appName= "young-reef-1453"
}

task integrationTest(type:Test, dependsOn:test) {
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
}

task stage(dependsOn: ['clean', 'installDist'])

defaultTasks "clean", "build", "installDist"